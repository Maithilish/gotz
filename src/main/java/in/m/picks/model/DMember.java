//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.03.05 at 11:27:32 AM IST 
//

package in.m.picks.model;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlType;

import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.commons.lang3.builder.ToStringBuilder;
import org.apache.commons.lang3.builder.ToStringStyle;

@XmlAccessorType(XmlAccessType.NONE)
@XmlType(name = "dMember", propOrder = { "fields" })
public class DMember extends Base implements Serializable {

	private final static long serialVersionUID = 1L;
	@XmlElements({ @XmlElement(name = "field", type = Field.class),
			@XmlElement(type = Fields.class) })
	protected List<FieldsBase> fields;
	@XmlAttribute(name = "axis")
	protected String axis;
	@XmlAttribute(name = "index")
	protected Integer index;
	@XmlAttribute(name = "match")
	protected String match;
	@XmlAttribute(name = "order")
	protected Integer order;
	@XmlAttribute(name = "value")
	protected String value;

	public List<FieldsBase> getFields() {
		if (fields == null) {
			fields = new ArrayList<FieldsBase>();
		}
		return this.fields;
	}

	public String getAxis() {
		return axis;
	}

	public void setAxis(String value) {
		this.axis = value;
	}

	public Integer getIndex() {
		return index;
	}

	public void setIndex(Integer value) {
		this.index = value;
	}

	public String getMatch() {
		return match;
	}

	public void setMatch(String value) {
		this.match = value;
	}

	public Integer getOrder() {
		return order;
	}

	public void setOrder(Integer value) {
		this.order = value;
	}

	public String getValue() {
		return value;
	}

	public void setValue(String value) {
		this.value = value;
	}

	@Override
	public boolean equals(Object obj) {
		String[] excludes = { "id", "dnDetachedState", "dnFlags", "dnStateManager" };
		return EqualsBuilder.reflectionEquals(this, obj, excludes);
	}

	@Override
	public int hashCode() {
		String[] excludes = { "id", "dnDetachedState", "dnFlags", "dnStateManager" };
		return HashCodeBuilder.reflectionHashCode(this, excludes);
	}

	@Override
	public String toString() {
		return ToStringBuilder.reflectionToString(this,
				ToStringStyle.MULTI_LINE_STYLE);
	}

}
