<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<xs:schema elementFormDefault="qualified" version="1.0"
    targetNamespace="http://codetab.org/gotz" xmlns:tns="http://codetab.org/gotz"
    xmlns:xf="http://codetab.org/xfield" xmlns:xs="http://www.w3.org/2001/XMLSchema">

    <xs:import namespace="http://codetab.org/xfield"
        schemaLocation="xfield.xsd" />

    <xs:element name="wrapper" type="tns:wrapper" />

    <xs:element name="fields" type="tns:fields" />

    <xs:element name="locator" type="tns:locator" />

    <xs:element name="locators" type="tns:locators" />

    <xs:element name="document" type="tns:document" />

    <xs:element name="bean" type="tns:bean" />

    <xs:element name="beans" type="tns:beans" />

    <xs:element name="datadefs" type="tns:dataDefs" />

    <xs:element name="datadef" type="tns:dataDef" />

    <xs:element name="axis" type="tns:dAxis" />

    <xs:element name="member" type="tns:dMember" />

    <xs:element name="filter" type="tns:dFilter" />

    <xs:complexType name="wrapper">
        <xs:sequence>
            <xs:any processContents="lax" minOccurs="0"
                maxOccurs="unbounded" />
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="fieldsBase" abstract="true">
        <xs:sequence />
    </xs:complexType>

    <xs:complexType name="field">
        <xs:complexContent>
            <xs:extension base="tns:fieldsBase">
                <xs:sequence />
                <xs:attribute name="name" type="xs:string" />
                <xs:attribute name="value" type="xs:string" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="fields">
        <xs:complexContent>
            <xs:extension base="tns:fieldsBase">
                <xs:group ref="tns:fields" />
                <xs:attribute name="name" type="xs:string" />
                <xs:attribute name="value" type="xs:string" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- group of fields and field (composite pattern) -->
    <xs:group name="fields">
        <xs:sequence>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element name="field" type="tns:field" />
                <xs:element name="fields" type="tns:fields" />
            </xs:choice>
        </xs:sequence>
    </xs:group>

    <xs:complexType name="base" abstract="true">
        <xs:sequence>
            <xs:element name="id" type="xs:long" minOccurs="0"
                maxOccurs="1" />
        </xs:sequence>
        <xs:attribute name="name" type="xs:string" />
    </xs:complexType>

    <xs:complexType name="locators">
        <xs:sequence>
            <xs:element name="locator" minOccurs="0"
                maxOccurs="unbounded" type="tns:locator" />
            <xs:element ref="tns:locators" minOccurs="0"
                maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attribute name="group" type="xs:string" />
    </xs:complexType>

    <xs:complexType name="locator" final="extension restriction">
        <xs:complexContent>
            <xs:extension base="tns:base">
                <xs:sequence>
                    <xs:group ref="tns:fields" />
                    <xs:element name="xField" type="xf:xField"
                        minOccurs="0" maxOccurs="1" />
                    <xs:element name="documents" type="tns:document"
                        minOccurs="0" maxOccurs="unbounded" />
                </xs:sequence>
                <xs:attribute name="url" type="xs:string" />
                <xs:attribute name="group" type="xs:string" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="document">
        <xs:complexContent>
            <xs:extension base="tns:base">
                <xs:sequence>
                    <xs:element name="documentObject" type="xs:anyType"
                        minOccurs="0" />
                </xs:sequence>
                <xs:attribute name="fromDate" type="xs:dateTime" />
                <xs:attribute name="toDate" type="xs:dateTime" />
                <xs:attribute name="url" type="xs:string" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="beans">
        <xs:sequence>
            <xs:element ref="tns:bean" minOccurs="0"
                maxOccurs="unbounded" />
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="bean">
        <xs:sequence />
        <xs:attribute name="name" type="xs:string" use="required" />
        <xs:attribute name="className" type="xs:string"
            use="required" />
        <xs:attribute name="xmlFile" type="xs:string" use="required" />
        <xs:attribute name="schemaFile" type="xs:string"
            use="optional" />
    </xs:complexType>

    <xs:complexType name="dataDefs">
        <xs:sequence>
            <xs:element ref="tns:datadef" minOccurs="0"
                maxOccurs="unbounded" />
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="dataDef">
        <xs:complexContent>
            <xs:extension base="tns:base">
                <xs:sequence>
                    <xs:group ref="tns:fields" />
                    <xs:element ref="tns:axis" minOccurs="0"
                        maxOccurs="unbounded" />
                </xs:sequence>
                <xs:attribute name="fromDate" type="xs:dateTime" />
                <xs:attribute name="toDate" type="xs:dateTime" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="dAxis">
        <xs:complexContent>
            <xs:extension base="tns:base">
                <xs:sequence>
                    <xs:group ref="tns:fields" />
                    <xs:element ref="tns:member" minOccurs="0"
                        maxOccurs="unbounded" />
                    <xs:element ref="tns:filter" minOccurs="0" />
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="dMember">
        <xs:complexContent>
            <xs:extension base="tns:base">
                <xs:sequence>
                    <xs:group ref="tns:fields" />
                </xs:sequence>
                <xs:attribute name="axis" type="xs:string" />
                <xs:attribute name="index" type="xs:int" />
                <xs:attribute name="match" type="xs:string" />
                <xs:attribute name="order" type="xs:int" />
                <xs:attribute name="value" type="xs:string" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="dFilter">
        <xs:complexContent>
            <xs:extension base="tns:base">
                <xs:sequence>
                    <xs:group ref="tns:fields" />
                </xs:sequence>
                <xs:attribute name="axis" type="xs:string" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

</xs:schema>

